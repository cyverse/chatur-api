---

- name: APT ; install pip
  ansible.builtin.apt:
    name: python3-pip
    update_cache: yes

- name: PIP ; install kubernetes
  ansible.builtin.pip:
    name: kubernetes
    executable: pip3

- name: COPY ; copy manifests dir
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/../../k8s"
    dest: "{{ MANIFESTS_DIR }}"
    owner: root
    group: root
    directory_mode: '0770'
    mode: '0600'

- name: FIND ; get list of manifests
  find:
    paths: "{{ MANIFESTS_DIR }}k8s"
  register: manifests

# LINEINPLACE for apisix-config.yaml

- name: K8S ; create namespaces
  kubernetes.core.k8s:
    name: "{{ item }}"
    api_version: v1
    kind: Namespace
    state: present
    kubeconfig: "{{ KUBE_CONFIG_FILE }}"
  with_items:
    - chatur
    - apisix

- name: TEMPLATE ; build the apisix_config.yaml manifest
  ansible.builtin.template:
    src: apisix_config.yaml.j2
    dest: "{{ MANIFESTS_DIR }}apisix_config.yaml"
    mode: 0640

- name: K8S ; Apply apisix_config.yaml manifest to the cluster
  kubernetes.core.k8s:
    state: present
    src: "{{ MANIFESTS_DIR }}apisix_config.yaml"

- name: HELM_REPOSITORY ; install ingress-nginx repo
  kubernetes.core.helm_repository:
    name: ingress-nginx
    repo_url: "https://kubernetes.github.io/ingress-nginx"

- name: HELM_REPOSITORY ; install cert-manager repo
  kubernetes.core.helm_repository:
    name: jetstack
    repo_url: "https://charts.jetstack.io"

- name: HELM_REPOSITORY ; install apisix repo
  kubernetes.core.helm_repository:
    name: apisix 
    repo_url: "https://charts.apiseven.com"

- name: HELM ; deploy ingress-nginx
  kubernetes.core.helm:
    name: ingress-nginx
    chart_ref: ingress-nginx/ingress-nginx
    release_namespace: default
    update_repo_cache: true
    kubeconfig: "{{ KUBE_CONFIG_FILE }}" 

- name: GET_URL ; grab the cert-manager crd
  ansible.builtin.get_url:
    url: https://github.com/cert-manager/cert-manager/releases/download/v1.13.3/cert-manager.crds.yaml
    dest: "{{ MANIFESTS_DIR }}certmanager.yaml"
    mode: '0664'

- name: K8S ; apply certmanager.yaml manifest to the cluster
  kubernetes.core.k8s:
    state: present
    src: "{{ MANIFESTS_DIR }}certmanager.yaml"

- name: HELM ; deploy cert-manager 
  kubernetes.core.helm:
    name: cert-manager
    chart_ref: jetstack/cert-manager
    namespace: cert-manager
    create_namespace: true
    update_repo_cache: true
    kubeconfig: "{{ KUBE_CONFIG_FILE }}" 

- name: HELM ; deploy apisix
  kubernetes.core.helm:
    name: apisix
    chart_ref: apisix/apisix 
    release_namespace: apisix
    update_repo_cache: true
    kubeconfig: "{{ KUBE_CONFIG_FILE }}" 

- name: K8S ; apply manifests
  kubernetes.core.k8s:
    state: present
    src: "{{ item.path }}"
    kubeconfig: "{{ KUBE_CONFIG_FILE }}"
  with_items: "{{ manifests.files }}"
