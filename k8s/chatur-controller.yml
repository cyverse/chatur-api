apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatur-controller
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: chatur-controller
  strategy:
    rollingUpdate:
      maxSurge: 200%
  template:
    metadata:
      labels:
        app.kubernetes.io/name: chatur-controller
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - chatur-controller
            topologyKey: kubernetes.io/hostname
      restartPolicy: Always
      containers:
      - name: controller
        image: harbor.cyverse.org/ai/fastchat
        resources:
          requests:
            cpu: "320m"
            memory: "1Gi"
            ephemeral-storage: "1Gi"
          limits:
            cpu: "3000m"
            memory: "3Gi"
            ephemeral-storage: "1Gi"
        args:
        - "python3"
        - "-m"
        - "fastchat.serve.controller"
        - "--host"
        - "0.0.0.0"
        - "--port"
        - "21001"
        ports:
        - name: listen-port
          containerPort: 21001
        livenessProbe:
          httpGet:
            path: /test_connection
            port: 21001
          failureThreshold: 1
          periodSeconds: 10
        startupProbe:
          httpGet:
            path: /test_connection
            port: 21001
          failureThreshold: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: chatur-controller
spec:
  selector:
    app.kubernetes.io/name: chatur-controller
  ports:
    - protocol: TCP
      port: 80
      targetPort: listen-port
